{"version":3,"sources":["ThirdPartyIcons/BoozPic.png","components/Projects.js","components/ProgressBar.js","components/SkillsTable.js","components/About.js","components/Intro.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Projects","props","id","className","ProgressBar","state","progress","completed","console","log","this","barNum","style","width","backgroundColor","bgcolor","React","Component","SkillsTable","About","pieData","title","value","color","height","radius","animate","labelPosition","label","dataEntry","labelStyle","index","fontSize","fontFamily","Intro","src","MePic","alt","activeClass","to","spy","smooth","offset","duration","cursor","fill","stroke","strokeWidth","d","Navbar","window","addEventListener","isTop","scrollY","nav","document","getElementById","classList","add","remove","removeEventListener","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","body","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c079471.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BoozPic.00478779.png\";","import React from \"react\";\r\n\r\n\r\nfunction Projects(props) {\r\n  return (\r\n    <section id='projects'>\r\n      <div id='projectsbg' className='projects-background'/>\r\n      Boombayah\r\n    </section>\r\n  )\r\n}\r\n \r\nexport default Projects;","import React, { useEffect } from 'react';\r\n\r\nclass ProgressBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {progress: props.completed};\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     // window.addEventListener('scroll', () =>{\r\n    //     //     const bar = document.getElementById(`'bar-${this.props.barNum}'`);\r\n    //     //     const position = bar.getBoundingClientRect();\r\n    //     //     const isAbout = position.top >= 0 && position.bottom <= window.innerHeight\r\n    //     //     if(isAbout){\r\n    //     //         console.log('visible');\r\n    //     //     } else {\r\n    //     //         // nav.classList.remove('scrolled');\r\n    //     //     }\r\n    //     // });\r\n    //     var temp = this.state.progress;\r\n    //     this.setState({progress: 0});\r\n    //     setTimeout(() => this.setState({progress: temp}), 2000);\r\n    // }\r\n\r\n    // componentWillUnmount(){\r\n    //     window.removeEventListener('scroll');\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     const bar = document.getElementById(`'bar-${this.props.barNum}'`);\r\n    //     const position = bar.getBoundingClientRect();\r\n    //     const isAbout = position.top >= 0 && position.bottom <= window.innerHeight;\r\n    //     if(isAbout){\r\n    //         console.log('visible');\r\n    //     }\r\n    // }, []);\r\n\r\n    render(){\r\n        return (\r\n            <div className='containerStyles'>\r\n                <div className='fillerStyles'>\r\n                    {console.log(`${this.props.completed}%`)}\r\n                    <span id={this.props.barNum} className='labelStyles' style={{width:`${this.state.progress}%`, backgroundColor: this.props.bgcolor}}>{`${this.state.progress}%`}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgressBar;","import React from \"react\"\r\nimport ProgressBar from './ProgressBar';\r\n \r\nfunction SkillsTable(props) {\r\n    return (\r\n        <div id='skills-table'>\r\n            <span>Javascript</span> <ProgressBar bgcolor='purple' completed='100' /> <br />\r\n            <span>Python</span> <ProgressBar bgcolor='teal' completed='75' /> <br />\r\n            <span>Java</span> <ProgressBar bgcolor='yellow' completed='60' /> <br />\r\n            <span>C#</span> <ProgressBar bgcolor='brown' completed='50' /> <br />\r\n            <span>C++</span> <ProgressBar bgcolor='gold' completed='25' /> <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkillsTable;\r\n\r\n//Old table\r\n            /* <table className='skills-table'>\r\n              <thead>\r\n                <tr>\r\n                  <th>Language</th>\r\n                  <th>Interest</th>\r\n                  <th>Experience</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr><td>Javascript</td><td>10</td><td>10</td></tr>\r\n                <tr><td>Python</td><td>8</td><td>7</td></tr>\r\n                <tr><td>Java</td><td>6</td><td>10</td></tr>\r\n                <tr><td>C#</td><td>4</td><td>9</td></tr>\r\n              </tbody>\r\n            </table> */","import React from \"react\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport SkillsTable from './SkillsTable';\r\n \r\nclass About extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {  \r\n      pieData: [\r\n        { title: 'Javascript', value: 20, color: 'Lime' },\r\n        { title: 'Python', value: 15, color: 'HoneyDew' },\r\n        { title: 'Java', value: 35, color: 'Coral' },\r\n        { title: 'C#', value: 20, color: 'Chartreuse' },\r\n        { title: 'C++', value: 5, color: 'PeachPuff' } \r\n      ],\r\n    };\r\n  }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <section id='about'>\r\n        <div id='aboutbg' className='about-background'/>\r\n        <div className='about-content'>\r\n          <div className='left-card card container'>\r\n            Really am a huge go getter, always looking for the bread. \r\n            Hmu w some sick job details and Ill hook you up with some sick code\r\n            {/* < data={this.state.pieData} /> */}\r\n            <PieChart style={{width:'40vw', height:'60vh'}} radius='25' animate='True' labelPosition='20'\r\n              // lineWidth={20}\r\n              // paddingAngle={18}\r\n              // rounded\r\n              label={({ dataEntry }) => dataEntry.title}\r\n              labelStyle={(index) => ({\r\n                // fill: this.state.pieData[index].color,\r\n                fontSize: '4px',\r\n                fontFamily: 'Montserrat',\r\n              })}\r\n              labelPosition={65}\r\n              data={this.state.pieData}\r\n            />\r\n          </div>\r\n          <div className=' right-card card container'>\r\n            <SkillsTable />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n \r\nexport default About;","import React from \"react\";\r\nimport MePic from \"../ThirdPartyIcons/BoozPic.png\";\r\nimport { Link } from \"react-scroll\";\r\n\r\n\r\nclass Intro extends React.Component{\r\n    render(){\r\n        return (\r\n            <section id='intro' className='flex height-fix'>\r\n                <div id='introbg' className='intro-background'></div>\r\n                <div className='intro-content flex'>  \r\n                    <img src={MePic} className=\"MePic\" alt=\"Me\" />\r\n                    <h1>Yo</h1>\r\n                    <h1>I'm AJ</h1>\r\n                    <Link\r\n                        activeClass='active'\r\n                        to='about'\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-70}\r\n                        duration= {500}\r\n                        style={{cursor: 'pointer'}}>\r\n                        <svg height=\"210\" width=\"500\">\r\n                            <g fill=\"none\">\r\n                                <path stroke=\"white\" strokeWidth='4' d=\"M 167 75 l 80 20 l 80 -20\" />\r\n                            </g>\r\n                        </svg>\r\n                    </Link>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Intro;","import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nclass Navbar extends React.Component{\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('scroll', () =>{\r\n            const isTop = window.scrollY > 100;\r\n            const nav = document.getElementById('navbar');\r\n            if(isTop){\r\n                nav.classList.add('scrolled');\r\n            } else {\r\n                nav.classList.remove('scrolled');\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('scroll');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id='navbar' className='header'>\r\n                <ul className='navlist'>\r\n                    <li className='navitem'>\r\n                        <Link\r\n                            activeClass='active'\r\n                            to='intro'\r\n                            spy={true}\r\n                            smooth={true}\r\n                            offset={-70}\r\n                            duration= {500}>\r\n                            Intro\r\n                        </Link>\r\n                    </li>\r\n                    <li className='navitem'>\r\n                        <Link \r\n                            activeClass='active' \r\n                            to='about' \r\n                            spy={true} \r\n                            smooth={true} \r\n                            offset={-70} \r\n                            duration={500}>\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                    <li className='navitem'>\r\n                        <Link \r\n                            activeClass='active' \r\n                            to='projects' \r\n                            spy={true} \r\n                            smooth={true} \r\n                            offset={-70} \r\n                            duration={500}>\r\n                            Projects\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport Projects from './components/Projects';\nimport About from './components/About';\nimport Intro from './components/Intro';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n      <div>\n        <Navbar />\n        <div className=\"overflow-wrap\">\n          <Intro />\n          <About />\n          <Projects />\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.body\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}